// Copyright (c) 2023, Tom Honermann
//
// This file is distributed under the MIT License. See the accompanying file
// LICENSE.txt or http://www.opensource.org/licenses/mit-license.php for terms
// and conditions.

#if !defined(CXX_PROG_ENV_INCLUDE_DETAIL_IOSTRING_REF)
#define CXX_PROG_ENV_INCLUDE_DETAIL_IOSTRING_REF

#include <filesystem>
#include <ranges>
#include <span>
#include <string>
#include <utility>


namespace detail {

class iostring_ref {
public:
#if defined(_WIN32)
  using value_type = wchar_t;
#else
  using value_type = char;
#endif
  using view_type = std::span<const value_type>;

  iostring_ref(view_type raw_data)
    : raw_data(raw_data)
  {}

  const value_type* data() const {
    return raw_data.data();
  }

  view_type view() const {
    return raw_data;
  }

  std::string as_string() const;
  std::wstring as_wstring() const;
  std::u8string as_u8string() const;
  std::u16string as_u16string() const;
  std::u32string as_u32string() const;
  std::filesystem::path as_path() const;

private:
  view_type raw_data;
};

} // namespace detail


#endif // CXX_PROG_ENV_INCLUDE_DETAIL_IOSTRING_REF
